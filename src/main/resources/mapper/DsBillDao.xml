<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.dsrank.communitymanagement.dao.DsBillDao">

    <resultMap id="BaseResultMap" type="cn.dsrank.communitymanagement.entity.DsBill">
        <!--@Table ds_Bill-->
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userid" column="userId" jdbcType="INTEGER"/>
        <result property="propertyfeeid" column="propertyFeeId" jdbcType="INTEGER"/>
        <result property="date" column="date" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="UserBill" type="cn.dsrank.communitymanagement.vo.UserBill">
        <result property="area" column="area" jdbcType="FLOAT"/>
        <result property="price" column="price" jdbcType="FLOAT"/>
        <result property="date" column="date" jdbcType="TIMESTAMP"/>
        <result property="desc" column="desc"  jdbcType="VARCHAR"/>

    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
          id, userId, propertyFeeId, date
        from ds_Bill
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select
          id, userId, propertyFeeId, date
        from ds_Bill
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userid != null">
                and userId = #{userid}
            </if>
            <if test="propertyfeeid != null">
                and propertyFeeId = #{propertyfeeid}
            </if>
            <if test="date != null">
                and date = #{date}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
          id, userId, propertyFeeId, date
        from CommunityManagement.ds_Bill
    </select>
    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from ds_Bill
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userid != null">
                and userId = #{userid}
            </if>
            <if test="propertyfeeid != null">
                and propertyFeeId = #{propertyfeeid}
            </if>
            <if test="date != null">
                and date = #{date}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into ds_Bill(userId, propertyFeeId)
        values (#{userid}, #{propertyfeeid})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into ds_Bill(userId, propertyFeeId, `date`)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.userid}, #{entity.propertyfeeid}, #{entity.date})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into ds_Bill(userId, propertyFeeId, `date`)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userid}, #{entity.propertyfeeid}, #{entity.date})
        </foreach>
        on duplicate key update
        userId = values(userId),
        propertyFeeId = values(propertyFeeId),
        date = values(date)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update ds_Bill
        <set>
            <if test="userid != null">
                userId = #{userid},
            </if>
            <if test="propertyfeeid != null">
                propertyFeeId = #{propertyfeeid},
            </if>
            <if test="date != null">
                date = #{date},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from ds_Bill where id = #{id}
    </delete>

    <select id="queryExistCount" resultType="java.lang.Integer">
        select count(1) from ds_Bill where  propertyfeeid = #{id}
    </select>

    <select id="queryUserBill" resultMap="BaseResultMap">
        select * from ds_Bill where userid = #{userid} and propertyFeeId = #{feeId}
    </select>

    <select id="queryUserBillByPage" resultMap="UserBill">
        select bill.date,fee.price,building.area ,fee.`desc` from ds_Bill  bill
        LEFT JOIN
        ds_PropertyFee  fee on bill.propertyFeeId=fee.id
        LEFT JOIN
        ds_Building  building on building.id in  (select buildingId from ds_UserInfo where userId = #{userid} )
        where userid = #{userid}
        LIMIT  #{page},#{count}
    </select>
    <select id="queryUserBillCount" resultType="java.lang.Integer">
        select count(1) from ds_Bill  bill
        LEFT JOIN
        ds_PropertyFee  fee on bill.propertyFeeId=fee.id
        LEFT JOIN
        ds_Building  building on building.id in  (select buildingId from ds_UserInfo where userId = 142 ) where userid =#{userid}

    </select>
</mapper>

